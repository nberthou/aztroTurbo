// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  twitchId  String?
  discordId String?
  stars           Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
  guild           Guild?   @relation(fields: [guildId], references: [id])
  guildId         String?  @db.ObjectId
  isGuildLeader   Boolean  @default(false)
  pokemons        Pokemon[] 
}

model Command {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String @unique
  content String
}

model Guild {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String   @unique
  name      String   @unique
  bank      Int      @default(0)
  color     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  members   User[]
}

model DeathCounter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  active    Boolean  @default(false)
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Pokemon {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  surname   String?
  level     Int      @default(1)
  exp       Int      @default(0)
  hp        Int      @default(0)
  maxHp     Int      @default(0)
  atk       Int      @default(0)
  def       Int      @default(0)
  spAtk     Int      @default(0)
  spDef     Int      @default(0)
  speed     Int      @default(0)
  expToLvlUp Int     @default(100)
  trainer   User?     @relation(fields: [trainerId], references: [id])
  trainerId String?   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

